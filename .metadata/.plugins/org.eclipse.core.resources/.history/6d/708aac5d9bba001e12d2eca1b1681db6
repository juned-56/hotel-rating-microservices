package com.api.user.service.web.service.impl;

import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.api.user.service.web.entity.User;
import com.api.user.service.web.exception.ResourceNotFoundException;
import com.api.user.service.web.repository.UserRepository;
import com.api.user.service.web.service.UserService;

@Service
public class UserServiceImpl implements UserService{
	
	@Autowired
	private UserRepository userRepository;
	
	@Autowired
	private RestTemplate restTemplate;

	@Override
	public User saveUser(User user) {
		String randomUserId = UUID.randomUUID().toString();
		user.setUserId(randomUserId);
		return userRepository.save(user);
	}

	@Override
	public List<User> getAllUsers() {
		return userRepository.findAll();
	}

	@Override
	public User getUser(String userId) {
		User usr = userRepository.findById(userId).orElseThrow(()-> new ResourceNotFoundException("User id is not found on the server!!! "+userId));
		//http://localhost:8081/user/getUserById/2c950828-cf06-496a-a24e-4222c6241e3a
		return usr; 
	}

	@Override
	public void deleteUserById(String userId) {
		userRepository.deleteById(userId);
	}

	@Override
	public User updateUser(String userId, User user) {
		//return userRepository.save(userId);
		if (!userRepository.existsById(userId)) {
	        throw new ResourceNotFoundException("User not found with id: " + userId);
	    }
	    // Set the userId for the user object
	    user.setUserId(userId);
	    return userRepository.save(user);
	}

}
